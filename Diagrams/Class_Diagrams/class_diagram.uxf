<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.1.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>144</y>
      <w>168</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Car
Package::Car
--
-id: String
-manunfacturer: String
-model: String
-year: int
--
+hashCode(): int
+equals(obj: Object): boolean

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>184</x>
      <y>616</y>
      <w>168</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Loader
Package::data.loader
--

--
+load()
+loadTrips(): ArrayList&lt;Driver&gt;
+loadUsers(): ArrayList&lt;User&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>184</x>
      <y>752</y>
      <w>168</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>MemoryLoader
Package::data.loader
--

--
+load()
+loadTrips(): ArrayList&lt;Driver&gt;
+loadUsers(): ArrayList&lt;User&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>256</x>
      <y>712</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>368</x>
      <y>192</y>
      <w>168</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>PickUp
Package::PickUp
--
-place: AddressPlace
-pickUpDateAndTime: Date
-disembarkDateAndTime: Date
-cost: double
--
+hashCode(): int
+equals(obj: Object): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>632</x>
      <y>624</y>
      <w>168</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Place
Package::place
--
-country: String
-region: String
-town: String
-comment: String
--
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>632</x>
      <y>776</y>
      <w>168</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>AddressPlace
Package::place
--
-road: String
-number: int
-postCode: int
--
+hashcode(): int
+equals(obj: Object): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>704</x>
      <y>736</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>72</y>
      <w>192</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>RatingsSummary
Package::rating
--
-ratings: ArrayList&lt;Rating&gt;
-average: double
-size: int
--
+hashcode(): int
+equals(obj: Object): boolean
+getByRating(rating: Rating): Rating
+getByIndex(index: int): Rating
+isEmpty(): boolean
+updateAverage()
+remove(index int)
+remove(rating Rating)
+add(rating Rating)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>296</y>
      <w>168</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>DriverRatings
Package::rating
--
-trip: Trip
--

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>952</x>
      <y>256</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>376</y>
      <w>168</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>Rating
Package::rating
--
-number: int 
-comment: String
--
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>384</y>
      <w>168</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>DriverRequestList
Package::request
--
-requests: ArrayList&lt;Traveller&gt;
--
+hashCode(): int
+equals(obj: Object): boolean
+remove(i: int)
+add(req: Traveller)
+get(i: int): Traveller
+hashCode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>536</y>
      <w>168</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
EnumStatus
Package::request
--
+APPROVED
+REJECTED
+PENDING
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>640</y>
      <w>168</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Request
Package::request
--
-comment: String
-approvalCode: int
-status:EnumStatus
--
+hashCode(): int
+equals(obj: Object): boolean
+isApproved(): boolean
+isRejected(): boolean
+isPending(): boolean
+nextApprovalCode(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1544</x>
      <y>72</y>
      <w>208</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>Search
Package::search
--
-results: ArrayList&lt;Driver&gt;
--
+search(driver: Driver)ArrayList&lt;Driver&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1896</x>
      <y>472</y>
      <w>168</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
EnumTripStatus
Package::Trip
--
+OPEN
+CLOSED
+COMPLETED
+CANCELED</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1896</x>
      <y>592</y>
      <w>216</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Trip
Package::trip
--
-id: Long {composite}
-startingPoint: Place
-destination: Place
-dateOfDeparture: Date
-totalPrice: Currency
-status: EnumTripStatus
-travelers: ArrayList&lt;Traveller&gt;
-maxTravelers: int
--
+addTraveler(traveller: Traveller):boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2256</x>
      <y>64</y>
      <w>168</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>Password
Package::types
--
-password: String
--
+getPassword(): String
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2256</x>
      <y>176</y>
      <w>168</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Email
Package::types
--
-fullEmailAdress: String
--
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2256</x>
      <y>280</y>
      <w>168</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>CreditCard
Package::types
--
-cNumber: int
-bank: String
--
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2560</x>
      <y>496</y>
      <w>168</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
Package::types.currency
--
+EURO
+DOLLAR
-abbreviation: String
-sign: char
-conversionRate: float
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2936</x>
      <y>0</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>User
Package::user
--
#id: Long 
#name: String	
#surname: String
#email: Email
#password: Password
#age: int
#credit: CreditCard
#isValid: boolean
#isDriver: boolean
--
+hashCode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2560</x>
      <y>624</y>
      <w>168</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Currency
Package::types.currency
--
-value: float
-cName: CurrencyNamesEnum
--
+currencyChange(newCurrency: CurrencyNamesEnum)
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2936</x>
      <y>160</y>
      <w>168</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Traveller
Package::user
--
-trip: Trip
-traveller: User
-address: AddressPlace
-request: Request
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2936</x>
      <y>264</y>
      <w>168</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Driver
Package::user
--
-user: User
-car: Car
-request: DriverRequestList
-trip: Trip
--
+hashCode(): int
+equals(obj: Object): boolean
+addRequest(req: Traveller)
+approveRequest(i: int)
+declineRequest(i: in)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3296</x>
      <y>232</y>
      <w>168</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Encryption
Package::util.encryption
--
+encrypt(toEncrypt: String,seed: int): String
+encrypt(toEncrypt: iny,seed: int): int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3304</x>
      <y>392</y>
      <w>168</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>ReverseEncryption
Package::util.encryption
--
+encrypt(toEncrypt: String,seed: int): String
+encrypt(toEncrypt: iny,seed: int): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3304</x>
      <y>504</y>
      <w>168</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Decryption
Package::util.encryption
--
+decrypt(toEncrypt: String,seed: int): String
+decrypt(toEncrypt: iny,seed: int): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3304</x>
      <y>648</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>ReverseDecryption
Package::util.encryption
--
+decrypt(toEncrypt: String,seed: int): String
+decrypt(toEncrypt: iny,seed: int): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3376</x>
      <y>312</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3376</x>
      <y>592</y>
      <w>24</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
</diagram>
