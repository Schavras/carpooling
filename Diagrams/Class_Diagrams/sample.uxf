<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.1.0">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>125</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>Car
Package::Car
--
-id: String
-manunfacturer: String
-model: String
-year: int
--
+hashCode(): int
+equals(obj: Object): boolean

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>115</x>
      <y>420</y>
      <w>105</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Loader
Package::data.loader
--

--
+load()
+loadTrips(): ArrayList&lt;Driver&gt;
+loadUsers(): ArrayList&lt;User&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>115</x>
      <y>505</y>
      <w>105</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>MemoryLoader
Package::data.loader
--

--
+load()
+loadTrips(): ArrayList&lt;Driver&gt;
+loadUsers(): ArrayList&lt;User&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>160</x>
      <y>480</y>
      <w>15</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>230</x>
      <y>155</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>PickUp
Package::PickUp
--
-place: AddressPlace
-pickUpDateAndTime: Date
-disembarkDateAndTime: Date
-cost: double
--
+hashCode(): int
+equals(obj: Object): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>395</x>
      <y>425</y>
      <w>105</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>Place
Package::place
--
-country: String
-region: String
-town: String
-comment: String
--
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>395</x>
      <y>520</y>
      <w>105</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>AddressPlace
Package::place
--
-road: String
-number: int
-postCode: int
--
+hashcode(): int
+equals(obj: Object): boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>495</y>
      <w>15</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>80</y>
      <w>120</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>RatingsSummary
Package::rating
--
-ratings: ArrayList&lt;Rating&gt;
-average: double
-size: int
--
+hashcode(): int
+equals(obj: Object): boolean
+getByRating(rating: Rating): Rating
+getByIndex(index: int): Rating
+isEmpty(): boolean
+updateAverage()
+remove(index int)
+remove(rating Rating)
+add(rating Rating)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>220</y>
      <w>105</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>DriverRatings
Package::rating
--
-trip: Trip
--

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>595</x>
      <y>195</y>
      <w>15</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>270</y>
      <w>105</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Rating
Package::rating
--
-number: int 
-comment: String
--
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>775</x>
      <y>275</y>
      <w>105</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>DriverRequestList
Package::request
--
-requests: ArrayList&lt;Traveller&gt;
--
+hashCode(): int
+equals(obj: Object): boolean
+remove(i: int)
+add(req: Traveller)
+get(i: int): Traveller
+hashCode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>775</x>
      <y>370</y>
      <w>105</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
EnumStatus
Package::request
--
+APPROVED
+REJECTED
+PENDING
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>775</x>
      <y>435</y>
      <w>105</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Request
Package::request
--
-comment: String
-approvalCode: int
-status:EnumStatus
--
+hashCode(): int
+equals(obj: Object): boolean
+isApproved(): boolean
+isRejected(): boolean
+isPending(): boolean
+nextApprovalCode(): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>965</x>
      <y>80</y>
      <w>130</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>Search
Package::search
--
-results: ArrayList&lt;Driver&gt;
--
+search(driver: Driver)ArrayList&lt;Driver&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1185</x>
      <y>330</y>
      <w>105</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
EnumTripStatus
Package::Trip
--
+OPEN
+CLOSED
+COMPLETED
+CANCELED</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1185</x>
      <y>405</y>
      <w>135</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Trip
Package::trip
--
-id: Long {composite}
-startingPoint: Place
-destination: Place
-dateOfDeparture: Date
-totalPrice: Currency
-status: EnumTripStatus
-travelers: ArrayList&lt;Traveller&gt;
-maxTravelers: int
--
+addTraveler(traveller: Traveller):boolean
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1410</x>
      <y>75</y>
      <w>105</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>Password
Package::types
--
-password: String
--
+getPassword(): String
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1410</x>
      <y>145</y>
      <w>105</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>Email
Package::types
--
-fullEmailAdress: String
--
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1410</x>
      <y>210</y>
      <w>105</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>CreditCard
Package::types
--
-cNumber: int
-bank: String
--
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1600</x>
      <y>345</y>
      <w>105</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
Package::types.currency
--
+EURO
+DOLLAR
-abbreviation: String
-sign: char
-conversionRate: float
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1835</x>
      <y>35</y>
      <w>105</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>User
Package::user
--
#id: Long 
#name: String	
#surname: String
#email: Email
#password: Password
#age: int
#credit: CreditCard
#isValid: boolean
#isDriver: boolean
--
+hashCode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1600</x>
      <y>425</y>
      <w>105</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>Currency
Package::types.currency
--
-value: float
-cName: CurrencyNamesEnum
--
+currencyChange(newCurrency: CurrencyNamesEnum)
+hashcode(): int
+equals(obj: Object): boolean</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1835</x>
      <y>135</y>
      <w>105</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>Traveller
Package::user
--
-trip: Trip
-traveller: User
-address: AddressPlace
-request: Request
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1835</x>
      <y>200</y>
      <w>105</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>Driver
Package::user
--
-user: User
-car: Car
-request: DriverRequestList
-trip: Trip
--
+hashCode(): int
+equals(obj: Object): boolean
+addRequest(req: Traveller)
+approveRequest(i: int)
+declineRequest(i: in)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2060</x>
      <y>180</y>
      <w>105</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Encryption
Package::util.encryption
--
+encrypt(toEncrypt: String,seed: int): String
+encrypt(toEncrypt: iny,seed: int): int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2065</x>
      <y>280</y>
      <w>105</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>ReverseEncryption
Package::util.encryption
--
+encrypt(toEncrypt: String,seed: int): String
+encrypt(toEncrypt: iny,seed: int): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2065</x>
      <y>350</y>
      <w>105</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
Decryption
Package::util.encryption
--
+decrypt(toEncrypt: String,seed: int): String
+decrypt(toEncrypt: iny,seed: int): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2065</x>
      <y>440</y>
      <w>105</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>ReverseDecryption
Package::util.encryption
--
+decrypt(toEncrypt: String,seed: int): String
+decrypt(toEncrypt: iny,seed: int): int</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2110</x>
      <y>230</y>
      <w>15</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2110</x>
      <y>405</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
</diagram>
